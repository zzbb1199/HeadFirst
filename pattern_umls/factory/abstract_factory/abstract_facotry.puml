@startuml

package 抽象工厂{

interface AbstractFactory{
    createProductA()
    createProductB()
}

class ConcreteFactory1{
      createProductA()
      createProductB()
}

class ConcreteFactory2{
      createProductA()
      createProductB()
}


AbstractFactory <|.. ConcreteFactory1
AbstractFactory <|.. ConcreteFactory2

}

package 产品{

 interface AbstractProductA{
 }
 interface AbstractProductB{
 }

 AbstractProductA <|.. ProductA1
 AbstractProductA <|.. ProductA2

 AbstractProductB <|.. ProductB1
 AbstractProductB <|.. ProductB2

}




ConcreteFactory1 --> ProductA1
ConcreteFactory1 --> ProductB1

ConcreteFactory2 --> ProductA2
ConcreteFactory2 --> ProductB2


@enduml